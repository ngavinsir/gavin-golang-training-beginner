// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ngavinsir/golangtraining/internal/rest (interfaces: PaymentsService)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	golangtraining "github.com/ngavinsir/golangtraining"
)

// MockPaymentsService is a mock of PaymentsService interface.
type MockPaymentsService struct {
	ctrl     *gomock.Controller
	recorder *MockPaymentsServiceMockRecorder
}

// MockPaymentsServiceMockRecorder is the mock recorder for MockPaymentsService.
type MockPaymentsServiceMockRecorder struct {
	mock *MockPaymentsService
}

// NewMockPaymentsService creates a new mock instance.
func NewMockPaymentsService(ctrl *gomock.Controller) *MockPaymentsService {
	mock := &MockPaymentsService{ctrl: ctrl}
	mock.recorder = &MockPaymentsServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPaymentsService) EXPECT() *MockPaymentsServiceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockPaymentsService) Create(arg0 context.Context, arg1 *golangtraining.Payment) (golangtraining.PaymentCode, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(golangtraining.PaymentCode)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockPaymentsServiceMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockPaymentsService)(nil).Create), arg0, arg1)
}
