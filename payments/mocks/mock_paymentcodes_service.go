// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ngavinsir/golangtraining/payments (interfaces: PaymentCodesService)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	golangtraining "github.com/ngavinsir/golangtraining"
)

// MockPaymentCodesService is a mock of PaymentCodesService interface.
type MockPaymentCodesService struct {
	ctrl     *gomock.Controller
	recorder *MockPaymentCodesServiceMockRecorder
}

// MockPaymentCodesServiceMockRecorder is the mock recorder for MockPaymentCodesService.
type MockPaymentCodesServiceMockRecorder struct {
	mock *MockPaymentCodesService
}

// NewMockPaymentCodesService creates a new mock instance.
func NewMockPaymentCodesService(ctrl *gomock.Controller) *MockPaymentCodesService {
	mock := &MockPaymentCodesService{ctrl: ctrl}
	mock.recorder = &MockPaymentCodesServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPaymentCodesService) EXPECT() *MockPaymentCodesServiceMockRecorder {
	return m.recorder
}

// GetByPaymentCode mocks base method.
func (m *MockPaymentCodesService) GetByPaymentCode(arg0 context.Context, arg1 string) (golangtraining.PaymentCode, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByPaymentCode", arg0, arg1)
	ret0, _ := ret[0].(golangtraining.PaymentCode)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByPaymentCode indicates an expected call of GetByPaymentCode.
func (mr *MockPaymentCodesServiceMockRecorder) GetByPaymentCode(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByPaymentCode", reflect.TypeOf((*MockPaymentCodesService)(nil).GetByPaymentCode), arg0, arg1)
}
